/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones, paquetes
package parser;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import scanner.TError;
import java.io.FileWriter;
import java.io.PrintWriter;

//------> Codigo para el parser,variables, metodos
parser code
{:
    public String resultado="";
    public static LinkedList<TError> TablaES = new LinkedList<TError>(); 

    //Metodo al que se llama automaticamente ante algun error sintactico

    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError datos = new TError(lexema,fila,columna,"Error Sintactico","Caracter no esperado");
        TablaES.add(datos);
       FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter("D:\\Sexto Semestre\\Compiladores\\Compiler\\src\\scanner\\salida.txt");
            pw = new PrintWriter(fichero);

            
                pw.println("Error Sintactio Recuperado "+lexema+" Linea "+fila+" Columna "+columna);

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        };
        
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError datos = new TError(lexema,fila,columna,"Error Sintactico","Caracter no esperado");
        TablaES.add(datos);
     
    }

:}

//------> Codigo para las acciones gramaticales
action code
{:
:}

/*--------------- 2da Area: Declaraciones -----------------------*/
//------> declaracion de terminales 
terminal PLUS,MINUS,MORE,DIV,COMMENT,PARA,PARC,EXCLA,QUOTE,NUMERAL,DOLAR,
PERCENT,CAFE,SINGLEQUOTE,POINT,COMMA,DPOINT,PC,MINUS2,EQUAL,MINUS3,
INTER,TILD,LLAV,LLAC,OR,EQUALS,CORC,CORD,DIAGO,EXP,FLOOR,SPACE,BOOLEAN,BREAK,CALLOUT,CLASS,CONTINUE,ELSE,FALSE,FOR,IF,INT,RETURN,TRUE,VOID;
terminal Integer NUM, ALPHA,PROGRAM,alpha_num;



//------> declaracion de no terminales
non terminal String statement,statement2,block,var_decl,type,id,expr,bin_op;

precedence left PLUS,MINUS;
precedence left MORE, DIV, PERCENT;
precedence left MINUS2, MINUS3, EQUAL, CAFE, OR, EXCLA;


statement::= statement2 {:System.out.println("Sentencia analizada correctamente. Sin errores.");:}
        | error {: System.out.println("Error sintactico en la sentencia"); :};

statement2::=IF PARA expr PARC block ELSE block
            |FOR id EQUAL expr COMMA expr block
            |RETURN expr PC
            |BREAK PC
            |CONTINUE PC
            |block;
block::=LLAV var_decl statement2 LLAC;
var_decl::=type id PC | var_decl type id PC;
type::= INT | BOOLEAN;
id::=alpha_num;
expr::=alpha_num
      |expr bin_op expr
      |MINUS expr
      |EXCLA expr
      |PARC expr PARA;
bin_op::=PLUS | MINUS |MORE | DIV |PERCENT | MINUS2 | MINUS3 | MINUS2 EQUAL | MINUS3 EQUAL | EQUAL EQUAL | EXCLA EQUAL | CAFE CAFE | OR OR;

